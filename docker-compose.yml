version: '3'
services:
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
#    command: sh /app/docker/api/test.sh
    volumes:
      - $PWD/docker/api/test.sh:/app/docker/api/test.sh
    environment:
      AWS_ACCESS_KEY_ID: hogehoge
      AWS_SECRET_ACCESS_KEY: fugafuga
      DYNAMODB_ENDPOINT: http://dynamodb:8000
      RECOMMENDED_BOOKS_TABLE_NAME: RecommendedBooks
      ID_COUNTER_TABLE_NAME: IdCounter
      USERS_TABLE_NAME: Users
      POSTS_TABLE_NAME: Posts
    networks:
      - lambda-local
    depends_on:
      - dynamodb
  dynamodb:
    image: amazon/dynamodb-local
    container_name: dynamoDb
    command: -jar DynamoDBLocal.jar -dbPath /data
    ports:
      - 3307:8000
    networks:
      - lambda-local
    volumes:
      - $PWD/docker/dynamodb/data:/data
  minio:
    image: minio/minio
    container_name: minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: hogehoge
      MINIO_SECRET_KEY: fugafuga
    ports:
      - 9000:9000
    volumes:
      - $PWD/docker/minio/data:/data
      - $PWD/docker/minio/config:/root/.
    networks:
      - lambda-local
networks:
  lambda-local:
    external: true