AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  my-blog-api-sam
  
  Sample SAM Template for my-blog-api-sam


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        USERNAME: username
        PASSWORD: password
        HOST: host
        PORT: port
        DBNAME: dbname

Resources:
  MyBlogApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/
      Handler: handler
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        RecommendedBooksApi:
          Type: Api
          Properties:
            Path: /recommended_books
            Method: GET
        PostsIndexApi:
          Type: Api
          Properties:
            Path: /posts
            Method: GET
        PostsShowApi:
          Type: Api
          Properties:
            Path: /posts/{id}
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          USERNAME: username
          PASSWORD: password
          HOST: host
          PORT: port
          DBNAME: dbname
      Role: "arn:aws:iam::873781314098:role/my-blog-api-sam-MyBlogApiFunctionRole-1HTYS5Y6FSF5R"
      VpcConfig:
        SecurityGroupIds: ["sg-0351ecbd14859fcfe"]
        SubnetIds: ["subnet-3b290b13"]
  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
  MyBlogApiFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  MyBlogApiAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  MyBlogApiFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt MyBlogApiFunction.Arn
  MyBlogApiFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt MyBlogApiFunctionRole.Arn
